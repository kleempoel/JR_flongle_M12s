data=unique(read.table('blast/jr_flongle_m12s_blast_mito.txt',sep = '\t'))
accessions=data %>% group_by(sacc) %>% summarise(count=n()) %>% arrange(-count)
library(tidyverse)
accessions=data %>% group_by(sacc) %>% summarise(count=n()) %>% arrange(-count)
colnames(data)=c('seqid', 'sseqid', 'sacc', 'staxids', 'evalue', 'pident', 'nident', 'slen', 'qstart', 'qend', 'length', 'mismatch')
accessions=data %>% group_by(sacc) %>% summarise(count=n()) %>% arrange(-count)
library(taxize)
accessions$taxid=NA;accessions$common_name=NA;accessions$scientific_name=NA
accessions$Genus=NA;accessions$Family=NA;accessions$Order=NA;
accessions$Class=NA;accessions$Kingdom=NA;accessions$ref_name=NA;
for (iseq in 1:nrow(accessions)){
temptax=genbank2uid(id = accessions$sacc[iseq])
accessions$taxid[iseq]=as.numeric(unlist(temptax[[1]])[1])
temptax2=unlist(id2name(accessions$taxid[iseq], db = "ncbi"))
accessions$scientific_name[iseq]=temptax2[2]
t2=tax_name(query = c(accessions$scientific_name[iseq]),
get = c("Genus","Family","Order","Class",'Kingdom'), db = "ncbi")
t=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
if(is_empty(t)==F){
accessions$common_name[iseq]=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
}
accessions$Genus[iseq]=t2$Genus
accessions$Family[iseq]=t2$Family
accessions$Order[iseq]=t2$Order
accessions$Class[iseq]=t2$Class
accessions$Kingdom[iseq]=t2$Kingdom
accessions$ref_name[iseq]=attr(temptax[[1]],"name")
rm(temptax,temptax2,t2)
}
print(which(is.na(accessions$Class)==T))
write_csv(accessions, 'blast/jr_flongle_m12s_blast_mito_accessions.csv', na = "NA")
View(accessions)
library(tidyverse)
data=unique(read.table('blast/jr_flongle_m12s_blast_mito.txt',sep = '\t'))
colnames(data)=c('seqid', 'sseqid', 'sacc', 'staxids', 'evalue', 'pident', 'nident', 'slen', 'qstart', 'qend', 'length', 'mismatch')
accessions=data %>% group_by(sacc) %>% summarise(count=n()) %>% arrange(-count)
library(taxize)
accessions$taxid=NA;accessions$common_name=NA;accessions$scientific_name=NA
accessions$Genus=NA;accessions$Family=NA;accessions$Order=NA;
accessions$Class=NA;accessions$Kingdom=NA;accessions$ref_name=NA;
for (iseq in 1:nrow(accessions)){
temptax=genbank2uid(id = accessions$sacc[iseq])
accessions$taxid[iseq]=as.numeric(unlist(temptax[[1]])[1])
temptax2=unlist(id2name(accessions$taxid[iseq], db = "ncbi"))
accessions$scientific_name[iseq]=temptax2[2]
t2=tax_name(query = c(accessions$scientific_name[iseq]),
get = c("Genus","Family","Order","Class",'Kingdom'), db = "ncbi")
t=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
if(is_empty(t)==F){
accessions$common_name[iseq]=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
}
accessions$Genus[iseq]=t2$Genus
accessions$Family[iseq]=t2$Family
accessions$Order[iseq]=t2$Order
accessions$Class[iseq]=t2$Class
accessions$Kingdom[iseq]=t2$Kingdom
accessions$ref_name[iseq]=attr(temptax[[1]],"name")
rm(temptax,temptax2,t2)
}
print(which(is.na(accessions$Class)==T))
write_csv(accessions, 'blast/jr_flongle_m12s_blast_mito_accessions.csv', na = "NA")
View(accessions)
library(tidyverse)
data=read_table2('ecotag/jr_flongle_m12s_clust_ecotag.txt')
View(data)
print(nrow(data))
#filter identity
data= data %>% filter(`best_identity:M12s_v1_clean_uniqID_uniq_length`>0.8)
#filter identity
data= data %>% filter(`best_identity:M12s_v1_clean_uniqID_uniq_length`>0.85)
library(tidyverse)
data=read_table2('ecotag/jr_flongle_m12s_clust_ecotag.txt')
print(nrow(data))
#filter identity
data= data %>% filter(`best_identity:M12s_v1_clean_uniqID_uniq_length`>0.85)
#families
fam=data %>% select(family_name) %>% unique()
View(fam)
print(fam)
fam
print(fam)
print(fam)
#families
fam=data  %>% group_by(family_name) %>% n()
#families
fam=data  %>% group_by(family_name) %>% tally()
print(fam)
genus=data  %>% group_by(genus_name) %>% tally()
print(genus)
sci_name=data  %>% group_by(scientific_name) %>% tally()
print(sci_name)
library(tidyverse)
data=unique(read.table('blast/jr_flongle_m12s_allseqcut_mito.txt',sep = '\t'))
data=read_table('blast/jr_flongle_m12s_allseqcut_mito.txt')
data=read_table2('blast/jr_flongle_m12s_allseqcut_mito.txt')
View(data)
data=read_table2('blast/jr_flongle_m12s_allseqcut_mito.txt',col_names = False)
data=read_table2('blast/jr_flongle_m12s_allseqcut_mito.txt',col_names = FALSE)
colnames(data)=c('seqid', 'sseqid', 'sacc', 'staxids', 'evalue', 'pident', 'nident', 'slen', 'qstart', 'qend', 'length', 'mismatch')
#hist match length
hist(data$length,breaks = 100)
#hist match length
hist(data$length,breaks = 100,'black')
#hist match length
hist(data$length,breaks = 100,col = 'black')
data=data %>% filter(length>150)
accessions=data %>% group_by(sacc) %>% summarise(count=n()) %>% arrange(-count)
View(accessions)
library(taxize)
accessions$taxid=NA;accessions$common_name=NA;accessions$scientific_name=NA
accessions$Genus=NA;accessions$Family=NA;accessions$Order=NA;
accessions$Class=NA;accessions$Kingdom=NA;accessions$ref_name=NA;
for (iseq in 1:nrow(accessions)){
temptax=genbank2uid(id = accessions$sacc[iseq])
accessions$taxid[iseq]=as.numeric(unlist(temptax[[1]])[1])
temptax2=unlist(id2name(accessions$taxid[iseq], db = "ncbi"))
accessions$scientific_name[iseq]=temptax2[2]
t2=tax_name(query = c(accessions$scientific_name[iseq]),
get = c("Genus","Family","Order","Class",'Kingdom'), db = "ncbi")
t=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
if(is_empty(t)==F){
accessions$common_name[iseq]=unlist(sci2comm(scinames=accessions$scientific_name[iseq], db = "ncbi"))
}
accessions$Genus[iseq]=t2$Genus
accessions$Family[iseq]=t2$Family
accessions$Order[iseq]=t2$Order
accessions$Class[iseq]=t2$Class
accessions$Kingdom[iseq]=t2$Kingdom
accessions$ref_name[iseq]=attr(temptax[[1]],"name")
rm(temptax,temptax2,t2)
}
print(which(is.na(accessions$Class)==T))
all_sp=accessions %>% group_by(sacc) %>% summarise(sum(count))
View(all_sp)
all_sp=accessions %>% group_by(common_name) %>% summarise(sum(count))
all_sp=accessions %>% group_by(common_name) %>% summarise(sum(count)) %>% arrange(-`sum(count)`)
all_fam=accessions %>% group_by(Family) %>% summarise(sum(count)) %>% arrange(-`sum(count)`)
View(all_fam)
all_gen=accessions %>% group_by(Genus) %>% summarise(sum(count)) %>% arrange(-`sum(count)`)
View(all_gen)
